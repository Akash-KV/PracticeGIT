
import Controllers.BrowseModeController;
import Controllers.BuildModeController;
import org.graphwalker.core.machine.ExecutionContext;
import org.graphwalker.java.annotation.GraphWalker;

/**
 * Test class for BuildModeMaterials
 **/
@GraphWalker(value = "quick_random(edge_coverage(100))")
public class BuildModeMaterialsMainTest extends ExecutionContext implements BuildModeMaterials {

    BuildModeController buildModeController = new BuildModeController();
    BrowseModeController browseModeController = new BrowseModeController();

    public void v_BrowseMode() {
        browseModeController.verifyNoItemsFound();
    }

    // To create assessment
    public void e_CreateAssessment() {
        buildModeController.createAssessment();
    }

    // To validate Build Mode navigation
    public void v_VerifyBuildNavigation() {
        buildModeController.verifyBuildNavigation();
    }

    // To check Hover
    public void e_CheckHover() {
        buildModeController.checkHover();
    }

    // To validate hover
    public void v_VerifyHover() {
        buildModeController.verifyHover();
    }

    // To click materials button
    public void e_ClickMaterialsButton() {
        buildModeController.clickMaterialsButton();
    }

    // To validate Materials modal
    public void v_VerifyMaterialsModal() {
        buildModeController.verifyMaterialsModal();
    }

    // To upload single file
    public void e_CheckSingleFileUpload() {
        buildModeController.checkSingleFileUpload();
    }

    // To validate single file upload
    public void v_VerifySingleFileUpload() {
        buildModeController.verifyFileUpload();
    }

    // To download single uploaded file
    public void e_CheckSingleFileDownload() {
        buildModeController.checkFileDownload();
    }

    // To validate single uploaded file
    public void v_VerifySingleFileDownload() {
        buildModeController.verifySingleFileDownload();
    }

    // To delete uploaded single file
    public void e_DeleteSingleFileFromMaterial() {
        buildModeController.deleteMaterial();
    }

    // To validate Deleted single file
    public void v_VerifyDeletedSingleFileFromMaterial() {
        buildModeController.verifyDeletedMaterial();
    }

    // To upload Multiple files
    public void e_CheckMultipleFileUpload() {
        buildModeController.checkMultipleFileUpload();
    }

    // To validate multiple files uploaded
    public void v_VerifyMultipleFileUpload() {
        buildModeController.verifyFileUpload();
    }

    // To download multiple files uploaded
    public void e_CheckMultipleFileDownload() {
        buildModeController.checkFileDownload();
    }

    // To validate multiple file downloaded
    public void v_VerifyMultipleFileDownload() {
        buildModeController.verifyMultipleFileDownload();
    }

    // To delete multiple files uploaded
    public void e_DeleteMultipleFileFromMaterial() {
        buildModeController.deleteMaterial();
    }

    // To validate deleted multiple files
    public void v_VerifyDeletedMultipleFileFromMaterial() {
        buildModeController.verifyDeletedMaterial();
    }

    // To upload multiple files less than ten MB
    public void e_CheckMultipleFileTypesLessThanTenMb() {
        buildModeController.checkMultipleFileTypesLessThanTenMb();
    }

    // To validate multiple files for uploaded for less than ten MB
    public void v_VerifyMultipleFileTypesLessThanTenMb() {
        buildModeController.verifyFileUpload();
        buildModeController.deleteMaterial();
        buildModeController.verifyDeletedMaterial();
    }

    public void e_CheckMultipleFileTypesMoreThanTenMb() {
        // There is issue for uploading Multiple Materials more than Ten Mb
    }

    public void v_VerifyMultipleFileTypesMoreThanTenMb() {
        // There is issue for uploading Multiple Materials more than Ten Mb
    }

    // To preview uploaded file
    public void e_PreviewUploadedFile() {
        buildModeController.previewUploadedFile();
    }

    // To validate preview uploaded file
    public void v_VerifyPreviewUploadedFile() {
        buildModeController.verifyPreviewUploadedFile();
    }

    // To check publish
    public void e_CheckPublish() {
        buildModeController.checkPublish();
    }

    // To validate publish
    public void v_VerifyPublish() {
        buildModeController.verifyPublish();
    }

    // To check autogenerated materials
    public void e_CheckAutogeneratedMaterials() {
        buildModeController.checkAutogeneratedMaterials();
    }

    // To validate autogenerated materials
    public void v_VerifyAutogeneratedMaterials() {
        buildModeController.verifyAutogeneratedMaterials();
    }

    // To validate materials title editable or not
    public void v_VerifyCustomMaterialTitleEdit() {
        buildModeController.verifyCustomMaterialTitleEdit();
    }

    // To click close button
    public void e_ClickCloseButton() {
        buildModeController.clickCloseButton();
    }

    // To validate assessments page
    public void v_VerifyAssessmentPage() {
        buildModeController.verifyAssessmentPage();
    }
}
